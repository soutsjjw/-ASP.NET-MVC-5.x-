@using X.PagedList.Mvc.Core; @*import this so we get our HTML Helper*@
@using X.PagedList;
@using X.PagedList.Mvc.Core.Common
@inject MessageBoard.Helpers.IConfigHelper _configHelper
@model MessageBoard.ViewModels.Guestbooks.Index

@{
    ViewBag.Title = "Index";
    var rowIndex = 0;
}

<div id="CreateData">
    <partial name="_Create" model="Model.Create" />
</div>

<h2>留言板</h2>

<form id="SearchForm" asp-action="Index" method="get">
    <div class="row d-flex align-items-center justify-content-center">
        <div class="col-1">
            <label asp-for="@Model.Search"></label>
        </div>
        <div class="col-8">
            <input type="text" class="form-control" asp-for="@Model.Search" autocomplete="false" />
        </div>
        <div class="col-3">
            <button type="submit" class="btn btn-primary btn-sm">搜尋</button>
            <button type="submit" class="btn btn-secondary btn-sm" onclick="$('#Search').val('')">清除</button>
        </div>
    </div>
</form>

@if (Model != null && Model.DataList.Any())
{
    <table class="table table-striped">
        <thead class="thead-light">
            <tr>
                <th scope="col">
                    #
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.DataList.First().Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DataList.First().CreateTime)
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.DataList.First().Content)
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.DataList.First().Reply)
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.DataList.First().ReplyTime)
                </th>
                <th scope="col"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.DataList)
            {
                rowIndex++;
                <tr>
                    <th scope="row">@rowIndex</th>
                    <td>
                        @item.Name
                    </td>
                    <td>
                        @item.CreateTime
                    </td>
                    <td>
                        @item.Content
                    </td>
                    <td>
                        @item.Reply
                    </td>
                    <td>
                        @item.ReplyTime
                    </td>
                    <td>
                        <a type="button" class="btn btn-primary btn-sm" asp-action="Edit" asp-route-id="@item.Id">修改留言</a>
                        <a type="button" class="btn btn-secondary btn-sm" asp-action="Reply" asp-route-id="@item.Id">回覆留言</a>
                        <a type="button" class="btn btn-danger btn-sm" asp-action="Delete" asp-route-id="@item.Id">刪除留言</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    @Html.PagedListPager((IPagedList)Model.DataList, page => Url.Action("Index", new { page, search = Model.Search }), new PagedListRenderOptions
    {
        PageClasses = new string[] { "page-link" },
        UlElementClasses = new string[] { "pagination" },
        LiElementClasses = new string[] { "page-item" },
        DisplayPageCountAndCurrentLocation = true,
        PageCountAndCurrentLocationFormat = _configHelper.Get("PageCountAndCurrentLocationFormat")
    })
}
else
{
    <div class="alert alert-danger" role="alert">
        資料庫內查無資料
    </div>
}
<a id="result"></a>

@section Style {
    <link rel="stylesheet" href="~/lib/toastr/build/toastr.min.css" />
    <link rel="stylesheet" href="~/css/PagedList.min.css" />
}

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.form/4.3.0/jquery.form.min.js" integrity="sha384-qlmct0AOBiA2VPZkMY3+2WqkHtIQ9lSdAsAn5RUJD/3vA5MKDgSGcdmIv4ycVxyn" crossorigin="anonymous"></script>
    <script src="~/lib/toastr/build/toastr.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#CreateForm').ajaxForm({
                error: function (xhr, textStatus, errorThrown) {
                    toastr.error(xhr.responseJSON.detail);
                    console.log("in ajaxForm error");
                },
                success: function (data, textStatus, jqXHR) {
                    location = "#result";
                    location.reload(true);
                }
            });
        });
    </script>
    @Html.Raw(MessageBoard.Helpers.NotificationsHelper.RenderNotifications())
}